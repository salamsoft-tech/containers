name: build-images

on:
  push:
    branches:
      - '*'

jobs:
  # list-changed-images:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.list-changed-images.outputs.matrix }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Get changed file's directories
  #       id: changed-files
  #       uses: tj-actions/changed-files@v46
  #       with:
  #         dir_names: 'true'

  #     - name: List changed image directories
  #       id: list-changed-images
  #       run: echo "matrix=$(find ${{ steps.changed-files.outputs.all_modified_files }} -type f -name Dockerfile -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  build:
    # needs: list-changed-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image:
          - odoo/17
          - odoo/18
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - uses: actions/checkout@v4

      - name: Read image name
        id: image-name
        uses: mikefarah/yq@v4
        with:
          cmd: yq eval '.name' ./${{ matrix.image }}/image-info.yaml

      - name: Prepare ENV
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "REGISTRY_IMAGE=ghcr.io/${{ github.repository_owner }}/${{ steps.image-name.outputs.result }}" >> $GITHUB_ENV

      - name: Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=sha

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ${{ matrix.image }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests/${{ matrix.image }}/
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${{ matrix.image }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/${{ matrix.image }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        image: ${{ fromJson(needs.list-changed-images.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Read image name
        id: image-name
        uses: mikefarah/yq@v4
        with:
          cmd: yq eval '.name' ./${{ matrix.image }}/image-info.yaml

      - name: Read image rolling-tags
        id: image-rolling-tags
        uses: mikefarah/yq@v4
        with:
          cmd: yq eval '.rolling-tags[]' ./${{ matrix.image }}/image-info.yaml

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests/${{ matrix.image }}/
          pattern: digests-*
          merge-multiple: true

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ steps.image-name.outputs.result }}
          tags: |
            ${{ steps.image-rolling-tags.outputs.result }}
            type=sha

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests/${{ matrix.image }}/
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.docker-metadata.outputs.version }}
